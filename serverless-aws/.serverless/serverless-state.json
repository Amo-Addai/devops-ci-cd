{
  "service": {
    "service": "chatbot-api-service",
    "serviceObject": {
      "name": "chatbot-api-service"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "go1.x",
      "region": "us-east-1",
      "environment": {
        "CONVERSATIONS_TABLE": "conversations-dev",
        "MESSAGES_TABLE": "messages-dev"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "sns:Publish"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "NewUnderscoremessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chatbot-api-service-dev-new_message"
            }
          },
          "NewUnderscoresmsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chatbot-api-service-dev-new_sms"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chatbot-api-service-dev-login"
            }
          },
          "AuthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chatbot-api-service-dev-auth"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "chatbot-api-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatbot-api-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chatbot-api-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "chatbot-api-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "NewUnderscoremessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chatbot-api-service/dev/1595818292267-2020-07-27T02:51:32.267Z/chatbot-api-service.zip"
              },
              "FunctionName": "chatbot-api-service-dev-new_message",
              "Handler": "bin/new_message",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CONVERSATIONS_TABLE": "conversations-dev",
                  "MESSAGES_TABLE": "messages-dev",
                  "DEBUG": "true",
                  "CONVERSATIONS_TABLENAME": "conversations-dev",
                  "MESSAGES_TABLENAME": "messages-dev",
                  "CONVERSATIONS_TABLENAME_ARN": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:dynamodb:us-east-1:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/conversations-dev"
                      ]
                    ]
                  },
                  "MESSAGES_TABLENAME_ARN": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:dynamodb:us-east-1:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/messages-dev"
                      ]
                    ]
                  },
                  "REGION": "us-east-1"
                }
              }
            },
            "DependsOn": [
              "NewUnderscoremessageLogGroup"
            ]
          },
          "NewUnderscoremessageLambdaVersionOvDOMVezHo0RlzeDxZgbjlMLmhCmh4gZ9i72zT871sQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NewUnderscoremessageLambdaFunction"
              },
              "CodeSha256": "a7r33SzdgEWoVy0RAIwYk+bE8w3I5NheFko8CDiTJjs="
            }
          },
          "NewUnderscoresmsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chatbot-api-service/dev/1595818292267-2020-07-27T02:51:32.267Z/chatbot-api-service.zip"
              },
              "FunctionName": "chatbot-api-service-dev-new_sms",
              "Handler": "bin/new_sms",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CONVERSATIONS_TABLE": "conversations-dev",
                  "MESSAGES_TABLE": "messages-dev",
                  "DEBUG": "true",
                  "TWILIO_FROM_PHONE": "12024101388",
                  "TWILIO_AUTH_TOKEN": "62142ad53ecd208c8dac1c8130a2821e",
                  "TWILIO_ACCOUNT_SID": "ACe0ba6fafe48966e5614a1df530584ced",
                  "THIS_URL": {
                    "Fn::Join": [
                      "",
                      [
                        "https://",
                        {
                          "Ref": "ApiGatewayRestApi"
                        },
                        ".execute-api.us-east-1.amazonaws.com/dev/new_sms"
                      ]
                    ]
                  },
                  "TOPIC_URL": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:sns:us-east-1:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":new-message-topic-dev"
                      ]
                    ]
                  }
                }
              }
            },
            "DependsOn": [
              "NewUnderscoresmsLogGroup"
            ]
          },
          "NewUnderscoresmsLambdaVersion7qrcSur4BqUcFTOEZ59bX5Xio95kK4gY5ZwrLK85I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NewUnderscoresmsLambdaFunction"
              },
              "CodeSha256": "a7r33SzdgEWoVy0RAIwYk+bE8w3I5NheFko8CDiTJjs="
            }
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chatbot-api-service/dev/1595818292267-2020-07-27T02:51:32.267Z/chatbot-api-service.zip"
              },
              "FunctionName": "chatbot-api-service-dev-login",
              "Handler": "bin/login",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CONVERSATIONS_TABLE": "conversations-dev",
                  "MESSAGES_TABLE": "messages-dev"
                }
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "LoginLambdaVersionK8hD7CMsDmO0M0IMVxfjkHi1yj73xV0SRb1G60NYnLs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "a7r33SzdgEWoVy0RAIwYk+bE8w3I5NheFko8CDiTJjs="
            }
          },
          "AuthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chatbot-api-service/dev/1595818292267-2020-07-27T02:51:32.267Z/chatbot-api-service.zip"
              },
              "FunctionName": "chatbot-api-service-dev-auth",
              "Handler": "bin/auth",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "go1.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "CONVERSATIONS_TABLE": "conversations-dev",
                  "MESSAGES_TABLE": "messages-dev"
                }
              }
            },
            "DependsOn": [
              "AuthLogGroup"
            ]
          },
          "AuthLambdaVersionL1qnN9VK9Iu3nWQVs1z3zTZkweeAfm8iN0zR43MBU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthLambdaFunction"
              },
              "CodeSha256": "a7r33SzdgEWoVy0RAIwYk+bE8w3I5NheFko8CDiTJjs="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-chatbot-api-service",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceNewsms": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "new_sms",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAuth": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "auth",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodNewsmsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceNewsms"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "NewUnderscoresmsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodAuthGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuth"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AuthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1595818290157": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodNewsmsPost",
              "ApiGatewayMethodLoginPost",
              "ApiGatewayMethodAuthGet"
            ]
          },
          "NewUnderscoresmsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "NewUnderscoresmsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "NewUnderscoremessageSnsSubscriptionNewmessagetopicdev": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Ref": "NewMessageTopic"
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "NewUnderscoremessageLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "NewUnderscoremessageLambdaPermissionNewmessagetopicdevSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "NewUnderscoremessageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Ref": "NewMessageTopic"
              }
            }
          },
          "ConversationsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "phone_guest",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "phone_dest",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "phone_guest",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "phone_dest",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "conversations-dev"
            }
          },
          "MessagesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "conversation_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "created_at",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "conversation_id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "created_at",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "messages-dev"
            }
          },
          "NewMessageTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "TopicName": "new-message-topic-dev"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "NewUnderscoremessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NewUnderscoremessageLambdaVersionOvDOMVezHo0RlzeDxZgbjlMLmhCmh4gZ9i72zT871sQ"
            }
          },
          "NewUnderscoresmsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NewUnderscoresmsLambdaVersion7qrcSur4BqUcFTOEZ59bX5Xio95kK4gY5ZwrLK85I"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionK8hD7CMsDmO0M0IMVxfjkHi1yj73xV0SRb1G60NYnLs"
            }
          },
          "AuthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthLambdaVersionL1qnN9VK9Iu3nWQVs1z3zTZkweeAfm8iN0zR43MBU"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "region": "us-east-1",
      "newMessageTopic": "new-message-topic-dev"
    },
    "pluginsData": {},
    "functions": {
      "new_message": {
        "handler": "bin/new_message",
        "events": [
          {
            "sns": {
              "arn": {
                "Ref": "NewMessageTopic"
              },
              "topicName": "new-message-topic-dev"
            }
          }
        ],
        "environment": {
          "DEBUG": "true",
          "CONVERSATIONS_TABLENAME": "conversations-dev",
          "MESSAGES_TABLENAME": "messages-dev",
          "CONVERSATIONS_TABLENAME_ARN": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NewUnderscoremessageLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"CONVERSATIONS_TABLENAME_ARN\"]"
          },
          "MESSAGES_TABLENAME_ARN": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NewUnderscoremessageLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"MESSAGES_TABLENAME_ARN\"]"
          },
          "REGION": "us-east-1"
        },
        "name": "chatbot-api-service-dev-new_message",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {},
        "versionLogicalId": "NewUnderscoremessageLambdaVersionOvDOMVezHo0RlzeDxZgbjlMLmhCmh4gZ9i72zT871sQ"
      },
      "new_sms": {
        "handler": "bin/new_sms",
        "events": [
          {
            "http": {
              "path": "new_sms",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "DEBUG": "true",
          "TWILIO_FROM_PHONE": "12024101388",
          "TWILIO_AUTH_TOKEN": "62142ad53ecd208c8dac1c8130a2821e",
          "TWILIO_ACCOUNT_SID": "ACe0ba6fafe48966e5614a1df530584ced",
          "THIS_URL": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NewUnderscoresmsLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"THIS_URL\"]"
          },
          "TOPIC_URL": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NewUnderscoresmsLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"TOPIC_URL\"]"
          }
        },
        "name": "chatbot-api-service-dev-new_sms",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {},
        "versionLogicalId": "NewUnderscoresmsLambdaVersion7qrcSur4BqUcFTOEZ59bX5Xio95kK4gY5ZwrLK85I"
      },
      "login": {
        "handler": "bin/login",
        "events": [
          {
            "http": {
              "path": "login",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "chatbot-api-service-dev-login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionK8hD7CMsDmO0M0IMVxfjkHi1yj73xV0SRb1G60NYnLs"
      },
      "auth": {
        "handler": "bin/auth",
        "events": [
          {
            "http": {
              "path": "auth",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "chatbot-api-service-dev-auth",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "go1.x",
        "vpc": {},
        "versionLogicalId": "AuthLambdaVersionL1qnN9VK9Iu3nWQVs1z3zTZkweeAfm8iN0zR43MBU"
      }
    },
    "resources": {
      "Resources": {
        "ConversationsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "phone_guest",
                "AttributeType": "S"
              },
              {
                "AttributeName": "phone_dest",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "phone_guest",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "phone_dest",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "conversations-dev"
          }
        },
        "MessagesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "conversation_id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "created_at",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "conversation_id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "created_at",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "messages-dev"
          }
        },
        "NewMessageTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "TopicName": "new-message-topic-dev"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/jkeam/go/src/bitbucket.org/itshospitality/chatbot-api/services/.serverless/chatbot-api-service.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/chatbot-api-service/dev/1595818292267-2020-07-27T02:51:32.267Z",
    "artifact": "chatbot-api-service.zip"
  }
}